package ar.edu.um.ingsoftapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlquilerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlquilerAllPropertiesEquals(Alquiler expected, Alquiler actual) {
        assertAlquilerAutoGeneratedPropertiesEquals(expected, actual);
        assertAlquilerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlquilerAllUpdatablePropertiesEquals(Alquiler expected, Alquiler actual) {
        assertAlquilerUpdatableFieldsEquals(expected, actual);
        assertAlquilerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlquilerAutoGeneratedPropertiesEquals(Alquiler expected, Alquiler actual) {
        assertThat(expected)
            .as("Verify Alquiler auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlquilerUpdatableFieldsEquals(Alquiler expected, Alquiler actual) {
        assertThat(expected)
            .as("Verify Alquiler relevant properties")
            .satisfies(e -> assertThat(e.getDias()).as("check dias").isEqualTo(actual.getDias()))
            .satisfies(e -> assertThat(e.getPrecioFinal()).as("check precioFinal").isEqualTo(actual.getPrecioFinal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlquilerUpdatableRelationshipsEquals(Alquiler expected, Alquiler actual) {
        assertThat(expected)
            .as("Verify Alquiler relationships")
            .satisfies(e -> assertThat(e.getAuto()).as("check auto").isEqualTo(actual.getAuto()));
    }
}
