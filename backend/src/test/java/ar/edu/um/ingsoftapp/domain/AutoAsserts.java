package ar.edu.um.ingsoftapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AutoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutoAllPropertiesEquals(Auto expected, Auto actual) {
        assertAutoAutoGeneratedPropertiesEquals(expected, actual);
        assertAutoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutoAllUpdatablePropertiesEquals(Auto expected, Auto actual) {
        assertAutoUpdatableFieldsEquals(expected, actual);
        assertAutoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutoAutoGeneratedPropertiesEquals(Auto expected, Auto actual) {
        assertThat(expected)
            .as("Verify Auto auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutoUpdatableFieldsEquals(Auto expected, Auto actual) {
        assertThat(expected)
            .as("Verify Auto relevant properties")
            .satisfies(e -> assertThat(e.getModelo()).as("check modelo").isEqualTo(actual.getModelo()))
            .satisfies(e -> assertThat(e.getKm()).as("check km").isEqualTo(actual.getKm()))
            .satisfies(e -> assertThat(e.getHp()).as("check hp").isEqualTo(actual.getHp()))
            .satisfies(e -> assertThat(e.getTransmision()).as("check transmision").isEqualTo(actual.getTransmision()))
            .satisfies(e -> assertThat(e.getPrecio()).as("check precio").isEqualTo(actual.getPrecio()))
            .satisfies(e -> assertThat(e.getDescripcion()).as("check descripcion").isEqualTo(actual.getDescripcion()))
            .satisfies(e -> assertThat(e.getImg()).as("check img").isEqualTo(actual.getImg()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAutoUpdatableRelationshipsEquals(Auto expected, Auto actual) {
        // empty method
    }
}
